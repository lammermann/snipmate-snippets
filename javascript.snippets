###########################################################################
#                            TextMate Snippets                            #
###########################################################################
snippet get "Get Elements"
getElement${1/(T)|.*/(?1:s)/}By${1:T}${1/(T)|(I)|.*/(?1:agName)(?2:d)/}('$2')
endsnippet

snippet '':f "object method string"
'${1:${2:#thing}:${3:click}}': function(element){
	$0
}${10:,}
endsnippet

snippet :f "Object Method"
${1:method_name}: function(${3:attribute}) {
	$0
}${10:,}
endsnippet

snippet :, "Object Value JS"
${1:value_name}:${0:value},
endsnippet

snippet : "Object key key: 'value'"
${1:key}: ${2:"${3:value}"}${4:, }
endsnippet

snippet proto "Prototype (proto)"
${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {
	${0:// body...}
};

endsnippet

snippet forr "for (...) {...} (faster)"
for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2--){
	${3:$1[$2]}$0
};
endsnippet

snippet for "for (...) {...}"
for (var ${2:i}=0; $2 < ${1:Things}.length; $2${3:++}) {
	${4:$1[$2]}$0
};
endsnippet

snippet fun "function (fun)"
function ${1:function_name} (${2:argument}) {
	${0:// body...}
}
endsnippet

snippet funa "anonyme function"
function(${1}) { ${2} };
endsnippet

snippet anon "anonyme function"
function(${1}) { ${2} };
endsnippet

snippet if "if"
if (${1:true}) {$0};
endsnippet

snippet ife "if ___ else"
if (${1:true}) {
	$0
} else {
}
endsnippet

snippet timeout "setTimeout function"
setTimeout(function() {$0}${2:}, ${1:10});
endsnippet

snippet switch "switch"
switch(${1:expression}) {
case '${3:case}':
	${4:// code}
	break;
${5}
default:
	${2:// code}
}
endsnippet

snippet log "log"
console.log(${1});
endsnippet

snippet case "case"
case '${1:case}':
	${2:// code}
	break;
${3}
endsnippet

snippet t "ternary operator ( condition ? value-if-true : value-if-false)"
${1:/* condition */} ? ${2:a} : ${3:b}
endsnippet

snippet do "do ... while"
do {
	${2:/* code */}
} while (${1:/* condition */});
endsnippet

snippet wh "while ... do"
while (${1:/* condition */}) {
	${2:/* code */}
}
endsnippet

snippet timeout "timeout"
setTimeout(function() {${3}}${2}, ${1:10};
endsnippet

# vim:ft=snippets:
