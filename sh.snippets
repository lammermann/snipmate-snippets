###########################################################################
#                            TextMate Snippets                            #
###########################################################################
# Shebang
snippet #! "#!"
#!/bin/bash
################################################################################
# Created on: `!v system("date +%m-%d-%Y")`
# Author: ${2:`!v system("whoami")`}
#
# Description: ${1:description}
################################################################################

${3}

# vim:ft=sh:fdm=syntax:nu:
endsnippet

snippet #! "env"
#!/usr/bin/env bash
################################################################################
# Created on: `!v system("date +%m-%d-%Y")`
# Author: ${2:`!v system("whoami")`}
#
# Description: ${1:description}
################################################################################

${3}

# vim:ft=sh:fdm=syntax:nu:
endsnippet

snippet temp "Tempfile"
${1:TMPFILE}="$(mktemp -t ${2:`!p
snip.rv = re.sub(r'[^a-zA-Z]', '_', snip.fn) or "untitled"
`})"
${3:${4/(.+)/trap "/}${4:rm -f '$${1/.*\s//}'}${4/(.+)/" 0               # EXIT\n/}${5/(.+)/trap "/}${5:rm -f '$${1/.*\s//}'; exit 1}${5/(.+)/" 2       # INT\n/}${6/(.+)/trap "/}${6:rm -f '$${1/.*\s//}'; exit 1}${6/(.+)/" 1 15    # HUP TERM\n/}}
endsnippet

snippet if "if ... then (if)"
if ${2:[[ ${1:condition} ]]}; then
	${0:#statements}
fi
endsnippet

snippet elif "elif .. (elif)"
elif ${2:[[ ${1:condition} ]]}; then
	${0:#statements}
endsnippet

snippet condition "$#"
${1:$#} -lt ${2:1}
endsnippet

snippet condition "gt"
${1:$var} -gt ${2:$other}
endsnippet

snippet condition "lt"
${1:$#} -lt ${2:1}
endsnippet

snippet condition "isroot"
"$(id -u)" != "0"
endsnippet

snippet condition "iffile"
! -e ${1:filename}
endsnippet

snippet condition "ifdir"
-d ${1:namedir}
endsnippet

snippet for "for ... done (for)"
for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
	${3:#statements}
done
endsnippet

snippet for "for ... in ... done (forin)"
for ${1:i}${2/.+/ in /}${2:words}; do
	${0:#statements}
done
endsnippet

snippet for "times-sequence #2"
for ${1:i} in {${2:1}..${3:10}}
do
	echo "$$1"
done
endsnippet

snippet for "c-style #3"
for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
	${3:#statements}
done
endsnippet

snippet for "index-loop #4"
for ${1:i}  in ${!${2:Array}[@]}
do
	echo "${$2[$1]}"
done
endsnippet

snippet for "numargs #5"
numargs=$#
for ((i=1 ; i <= numargs ; i++)); do
	echo "$1"
	shift
done
endsnippet

snippet until "until ... (done)"
until ${2:[[ ${1:condition} ]]}; do
	${0:#statements}
done
endsnippet

snippet while "while ... (done)"
while ${2:[[ ${1:condition} ]]}; do
	${0:#statements}
done
endsnippet

snippet case "case .. esac (case)"
case ${1:word} in
	${2:pattern})
		${3};;
esac
endsnippet

snippet getopts "getopts"
while getopts '${1:o}' ${2:opts} 
do 
	case $$2 in
	${3:o0})
		${4:#staments};;
	esac
done
endsnippet

snippet here "here document (here)"
<<-${2:'${1:TOKEN}'}
	$0
${1/['"`](.+)['"`]/$1/}
endsnippet

# Set SCRIPT_DIR variable to directory script is located.
snippet sdir "sdir"
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
endsnippet

snippet fun "fun"
function ${1:name}(){
	${2:Commands}
}
endsnippet

snippet yesno "simple"
read ${1:yn}
if [[ $$1 =~ [Yy] ]]; then
	echo "${2:#statement}"
else
	echo "${3:#statement}"
fi
endsnippet

snippet yesno "longer"
echo -n "Do you wish to ${1:#question}" '[y/n] ' ; read ${2:ans}
case "$$2" in
	y*|Y*) ${3:#statement} ;;
	*) ${4:#statement};;
esac
endsnippet

snippet usage "usage"
usage()
{
	echo "Usage: $(basename $${1:0}) ${2:argument}"
	echo "${3:explanation}"
}
endsnippet

snippet arr "list"
${1:array}=(${2:first} ${3:second} ${4}) ${5}
endsnippet

snippet arr "keyed"
${1:array}[0]=${2:value}
$1[1]=${3:value}
$1[2]=${4:value}
${5}
endsnippet

# vim:ft=snippets:
