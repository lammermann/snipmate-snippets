snippet #!
	#!/usr/bin/env lua
	$1
snippet lo
	local ${1:x} = ${2:1}
snippet fun
	function ${1:fname}(${2:...})
		${3:-- body}
	end
# generic for
snippet for generic
	for ${1:i}=${2:1},${3:10} do
		${4:print(i)}
	end
# pairs
snippet for pairs
	for ${1:i},${2:v} in pairs(${3:table_name}) do
	   ${4:-- body}
	end
# ipairs
snippet for ipairs
	for ${1:i},${2:v} in ipairs(${3:table_name}) do
	   ${4:-- body}
	end
snippet rep
	repeat
		${1:--[[ code ]]}
	until ${2:condition}
snippet tn
	tonumber(${1:var})${2}
snippet gmt
	getmetatable(${1:tbl})
snippet tsortf
	table.sort(${1:tbl}, function(${2:a}, ${3:b})
		${4:--[[ code ]]}
	end)
snippet if
	if ${1:condition} then
		${2:--[[ code ]]}
	end
snippet ass
	assert(${1:test} == ${2:condition}, "${3:errmsg}")
snippet pr
	print(${1})
snippet tins
	${1:tbl}[#$1 + ${3:1}] = ${2:val}${4}
snippet lfun
	local function ${1:function_name}(${2:args})
		${3:--[[ code ]]}
	end
snippet ret
	return ${1:0}
snippet req
	require "${1:module}"
snippet f
	function(${1:args}) ${2:--[[ code ]]} end
snippet smt
	setmetatable(${1:tbl}, ${2:...})
snippet tsort
	table.sort(${1:tbl}, function(a, b) return a ${2:<} b end)
snippet eli
	elseif ${3:condition} then
	${4:--[[ code ]]}
snippet el
	else
	${1:--[[ code ]]}
snippet --
	--[[
	${1:comment}
	]]
snippet t
	${1:a} and ${2:b} or ${3:c}
snippet tcat
	table.concat(${1:tbl}, ${2:","})
snippet do
	do
		${1:--[[ code ]]}
	end
snippet ts
	tostring(${1:var})${2}
snippet wh
	while ${1:condition} do
		${2:--[[ code ]]}
	end
